////////////////////////////////////////////////////////////////////////////////////////////////////
// file:	Apis\ApiMagicCardTypes.cs
//
// summary:	Implements the API magic card types class
////////////////////////////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using ApiViewer.Standard.Models;
using System.Linq;

namespace ApiViewer.Standard.Apis
{
    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   An API magic card types. </summary>
    ///
    /// <remarks>   James Coates, 8/27/2017. </remarks>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public class ApiMagicCardTypes : Api
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the name. </summary>
        ///
        /// <value> The name. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public override string Name { get { return "Magic the Gathering Card Types"; } }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the host. </summary>
        ///
        /// <value> The host. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public override string Host { get { return "https://api.magicthegathering.io/v1"; } }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets URL of the document. </summary>
        ///
        /// <value> The URL. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public override string Url { get { return "types"; } }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the category. </summary>
        ///
        /// <value> The category. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public override string Category { get { return "Games"; } }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets all. </summary>
        ///
        /// <remarks>   James Coates, 8/27/2017. </remarks>
        ///
        /// <returns>   all. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public override List<IModel> GetAll()
        {
            if (_cache != null && _cache.Count > 0 && LastFetch.AddMinutes(10) > DateTime.Now) return _cache;
            var queryResult = GetResults<objectResponse>();

            List<IModel> data = new List<IModel>();

            if (queryResult != null && queryResult.Count > 0)
            {
                foreach (var value in queryResult[0].types)
                {
                    var v = new oMagicCardTypes();
                    v.Name = value;
                    v.Id = value;
                    data.Add(v);
                }
            }

            LastFetch = DateTime.Now;

            data = data.OrderBy(o => o.Name).ToList();

            _cache = data;

            return data;
        }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   An object response. </summary>
        ///
        /// <remarks>   James Coates, 8/27/2017. </remarks>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        private class objectResponse
        {
            ////////////////////////////////////////////////////////////////////////////////////////////////////
            /// <summary>   Gets or sets the status. </summary>
            ///
            /// <value> The status. </value>
            ////////////////////////////////////////////////////////////////////////////////////////////////////

            public List<string> types { get; set; }
        }
    }
}
